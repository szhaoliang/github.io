<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[宇宙図]]></title>
    <url>%2F2019%2F03%2F04%2F%E5%AE%87%E5%AE%99%E5%9B%B3%2F</url>
    <content type="text"><![CDATA[打小就喜欢看星星，特别渴望能买个单筒的天文望远镜。长大成人了，工作了，养家了，至今也没能达成这个愿望。只能在网上欣赏欣赏图片，看看视频。一句话，还是不够执着，探索欲还是不够强大。 最近买了一本关于宇宙的入门级杂志单行本《宇宙図》，想从里面找一些童年回忆。虽说是入门级，结果上来就被打脸了……什么夸克（クォーク），基本粒子（素粒子），一下子就把我给整蒙了。这跟小时候的星星，月亮，牛郎织女完全不是一个路子啊。决定好好读一读这本杂志，然后好好研究一下我所爱好的那个“宇宙”。 我们从哪里来？我们到哪里去？（宇宙大爆炸之前是什么？宇宙之外还有什么？）]]></content>
      <categories>
        <category>趣味</category>
        <category>天文学</category>
        <category>宇宙</category>
      </categories>
      <tags>
        <tag>宇宙</tag>
        <tag>天文学</tag>
        <tag>趣味</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SSL/TLSサーバ証明書の取得 httpからhttpsへ]]></title>
    <url>%2F2018%2F11%2F28%2FSSL-TLS%E3%82%B5%E3%83%BC%E3%83%90%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%AE%E5%8F%96%E5%BE%97-http%E3%81%8B%E3%82%89https%E3%81%B8%2F</url>
    <content type="text"><![CDATA[Let’s Encrypt の使い方具体的な説明メモは未完成です。 準備なことインストールOSによって異なります。私はMacなので、Homebrewを使用して、Cerbotをインストールします。 12345678910SBJN [三 28 18:03:39] % brew install certbotUpdating Homebrew...==&gt; Auto-updated Homebrew!Updated 1 tap (homebrew/core).==&gt; Updated FormulaenodeWarning: certbot 0.28.0 is already installed and up-to-dateTo reinstall 0.28.0, run `brew reinstall certbot`SBJN [三 28 18:03:50] % インストールがちゃんとできましたね。 テスト実行 と 結果実行してみたら、エラー。。。 12345SBJN [三 28 18:09:28] % certbot The following error was encountered:[Errno 13] Permission denied: '/var/log/letsencrypt'Either run as root, or set --config-dir, --work-dir, and --logs-dir to writeable paths.SBJN [三 28 18:09:34] % sudoで再実行します。 123456sudo certbot Password:Saving debug log to /var/log/letsencrypt/letsencrypt.logPlugins selected: Authenticator apache, Installer apacheEnter email address (used for urgent renewal and security notices) (Enter 'c' tocancel): Emailを入力して、(A)greeで規則を同意しないといけないです。 1234567- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Please read the Terms of Service athttps://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You mustagree in order to register with the ACME server athttps://acme-v02.api.letsencrypt.org/directory- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -(A)gree/(C)ancel: まだ何か出て来ました。 1234567- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Would you be willing to share your email address with the Electronic FrontierFoundation, a founding partner of the Let's Encrypt project and the non-profitorganization that develops Certbot? We'd like to send you email about our workencrypting the web, EFF news, campaigns, and ways to support digital freedom.- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -(Y)es/(N)o: 次は 12No names were found in your configuration files. Please enter in your domainname(s) (comma and/or space separated) (Enter 'c' to cancel): 123456789101112Obtaining a new certificatePerforming the following challenges:http-01 challenge for www.nils.okinawaCleaning up challengesUnable to find a virtual host listening on port 80 which is currently needed for Certbot to prove to the CA that you control your domain. Please add a virtual host for port 80.IMPORTANT NOTES: - Your account credentials have been saved in your Certbot configuration directory at /etc/letsencrypt. You should make a secure backup of this folder now. This configuration directory will also contain certificates and private keys obtained by Certbot so making regular backups of this folder is ideal. DNS設定と準備SSL/TLS サーバ証明書の取得]]></content>
      <tags>
        <tag>https</tag>
        <tag>SSL/TLS</tag>
        <tag>Internet</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[お名前サーバーWAF設定]]></title>
    <url>%2F2018%2F11%2F27%2F%E3%81%8A%E5%90%8D%E5%89%8D%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BCWAF%E8%A8%AD%E5%AE%9A%2F</url>
    <content type="text"><![CDATA[Wordpressのお問い合わせページを設定しているところ、Saveボタンを押した瞬間にエラーが発生しました。 お名前.comのお客様センターに問い合わせしたら、下記の返信（一部）が来ました。メールに記載した通りで設定、無事完了〜〜 謝謝！ 恐れ入りますが、かんたんブログインストールでWordPressを設置された際にWAF設定が有効になっていることが原因である可能性がございます。 WAFは、お客様のWebサイトを狙った不正アクセスによる改ざんや、情報漏洩などのリスクを軽減するための機能でございますが、プラグイン設定などお客様の操作を攻撃とみなして接続を遮断する場合もございます。 ※WAF機能にて攻撃と判断した場合、通常は403エラーとなります。 お手数ではございますが、コントロールパネル内より下記手順にてWAFのログをご確認いただき、お客様の操作と思われるアクセスが攻撃として検知されていないか、ご確認いただけますでしょうか。 もし検知されている場合は、以下の手順にて除外記述を実施くださいますようお願いいたします。 ●WAF設定 - 除外設定方法● (1) コントロールパネルに管理者アカウント、パスワードでログインします。https://cp.rentalserver.jp/login.aspx コントロールパネルへログインする際の、管理者アカウント、パスワードは「お名前.com Navi」にてご確認ください。 ※お名前.com Naviへのログイン方法は本メールの末尾でご案内させていただいております (2) 「Web設定」欄の「WAF設定」をクリックします。 (3) ドメイン一覧が表示されますので、ログをご確認いただくドメインの「ログ参照」ボタンをクリックします。 (4) 表示される内容より、お客様のプラグイン設定操作に該当すると思われるアクセスがないかご確認ください。 (5) 該当がみつかった場合は「除外記述用データ」の内容を、お客様のWeb領域に設置している「.htaccess」ファイルに追記をお願いいたします。 以上で、WAFの除外記述は完了です。 なお、上記をお試しいただいても403エラーが改善しない場合、もしくは作業が困難な場合は、一時的にWAF設定を無効にしていただき、プラグインの設定を実施くださいますようお願い申しあげます。 ※WAF設定のON/OFF操作が反映されるまで1時間程度かかります。 ※昨今、WordPressを標的とした攻撃が多発しております。 そのため、WAF設定を無効にしたままの状態で、サイトをご運用されることはお勧めしておりません。 ●WAF設定 - WAFの無効化手順● (1) コントロールパネルに管理者アカウント、パスワードでログインします。https://cp.rentalserver.jp/login.aspx (2) 「Web設定」欄の「WAF設定」をクリックします。 (3) ドメイン一覧が表示されますので、WAF機能を無効にするドメインの「無効」をご選択いただいた後、「変更」ボタンをクリックします。 ※上記でコントロールパネルにログインできない場合は、下記方法にて「お名前.com Navi」にログインしていただき、そこから各種サービスの「コントロールパネル」にログインしていただくことが可能です。 ●お名前.com Naviから各種サービスのコントロールパネルにログインする● （1）以下のガイドの内容で「お名前.com Navi」にログインします。 http://guide.onamae-server.com/servernavi/1_1_1_70/ （2）「お名前.com Navi」にログインされましたら、以下のガイドの内容に沿って、各種サービスのコントロールパネルにログインします。 http://guide.onamae-server.com/servernavi/1_1_1_71/]]></content>
      <tags>
        <tag>Wordpress</tag>
        <tag>Theme</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Education Zone Pro 战斗记录]]></title>
    <url>%2F2018%2F11%2F14%2FEducation-Zone-Pro-%E6%88%98%E6%96%97%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[版本：Education Zone Pro 2.2.9 1. 更改404页面，显示图片*/education-zone-pro/404.php 123&lt;span&gt;&lt;?php esc_html_e( '404!', 'education-zone-pro' ); ?&gt;&lt;/span&gt;&lt;img src="&lt;?php echo get_template_directory_uri(); ?&gt;/404.jpg" align="middle"&gt;&lt;h1&gt;&lt;?php esc_html_e( 'The requested page cannot be found', 'education-zone-pro' ); ?&gt;&lt;/h1&gt; 2. Contact的Google map无法正常显示2.2.9 版本中的地图无法显示，直接显示代码，查看源代码，发现*/templates/template-contact.php有更改，将之前的文件替换后解决。]]></content>
      <categories>
        <category>Web</category>
        <category>Wordpress</category>
        <category>Theme </category>
      </categories>
      <tags>
        <tag>Wordpress</tag>
        <tag>Theme</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CentOS 7 No.1 安装&基本配置]]></title>
    <url>%2F2018%2F10%2F09%2FCentOS-7-No-1-%E5%AE%89%E8%A3%85-%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[下载前往CentOS的官网下载，下载页面。本教程使用版本CentOS-7-x86_64-DVD-1708.iso 安装添加用户[1] 新增一般用户的命令1234567[root@localhost ~]# useradd mao # 新建一个名为 mao 的用户[root@localhost ~]# passwd mao # 设定用户mao的密码Changing password for user mao.New UNIX password: # 输入想要设定的密码Retype new UNIX password:# # 再次输入密码passwd: all authentication tokens updated successfully.[root@localhost ~]# exit # 退出 [2] 一般用户登陆，切换成root12345678910CentOS Linux 7 (Core)Kernel 3.10.0-693.el7.x86_64 on an x86_64 localhost login: maomao # 输入用户名password: # 输入密码Last login: Tue May 1 21:31:39 on tty1[maomao@localhost ~]$ su - # 切换成rootPassword: # 输入root用户密码Last login: Tue May 1 21:47:24 CST 2018 on tty1[root@localhost ~]# # 切换成功 [3] 仅指定用户可以切换成root的设定方法。例如仅用户maomao可以切换成root。1234567891011121314151617[root@localhost ~]# usermod -G wheel maomao [root@localhost ~]# vi /etc/pam.d/su#%PAM-1.0auth sufficient pam_rootok.so# Uncomment the following line to implicitly trust users in the "wheel" group.#auth sufficient pam_wheel.so trust use_uid# Uncomment the following line to require a user to be in the "wheel" group.# 把下面的#去掉，将注释解除。auth required pam_wheel.so use_uidauth substack system-authauth include postloginaccount sufficient pam_succeed_if.so uid = 0 use_uid quietaccount include system-authpassword include system-authsession include system-authsession include postloginsession optional pam_xauth.so 查看是否生效，验证用户mao是否能切换成root。 123456789CentOS Linux 7 (Core)Kernel 3.10.0-693.el7.x86_64 on an x86_64 localhost login: mao # 输入用户名password: # 输入密码[mao@localhost ~]$ su - # 切换成rootPassword: # 输入root用户密码su: Permission denied # 没有权限[mao@localhost ~]$ # 切换失败 [4] 发送给root的邮件转送给一般用户。例如转送给用户maomao。1234567[root@localhost ~]# vi /etc/aliases# Person who should get root's mail# 把最后一行的＃删除，并将转送用户名更改成maomaoroot: maomao # 响应更改后的设置[root@localhost ~]# newaliases Firewall &amp; SELinux网络设置[1] 设置服务器主机名，设置固定IP地址。设置环境不一样，接口名（Interface）也各不相同，本例的接口名为「enp0s3」。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960# 将主机名设置成 centos7[root@localhost ~]# hostnamectl set-hostname centos7 # 查看装置[root@centos7 ~]# nmcli dDEVICE TYPE STATE CONNECTION enp0s3 ethernet disconnected -- lo loopback unmanaged -- # 根据上一命令查到装置名 enp0s3# 设置固定IPv4地址 ⇒ nmcli ～ IP地址[root@centos7 ~]# nmcli c modify enp0s3 ipv4.addresses 10.0.0.2/24 # 设置默认网管[root@centos7 ~]# nmcli c modify enp0s3 ipv4.gateway 10.0.0.1 # 设置DNS[root@centos7 ~]# nmcli c modify enp0s3 ipv4.dns 10.0.0.1 # 将IP地址设置为手动分配 (如果用DHCP的话将 "manual" 改成 "auto")[root@centos7 ~]# nmcli c modify enp0s3 ipv4.method manual # 重启接口让设置生效[root@centos7 ~]# nmcli c down enp0s3; nmcli c up enp0s3 Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/1) # 查看设定结果[root@centos7 ~]# nmcli d show enp0s3 GENERAL.DEVICE: enp0s3GENERAL.TYPE: ethernetGENERAL.HWADDR: 08:00:27:FF:27:A3GENERAL.MTU: 1500GENERAL.STATE: 100 (connected)GENERAL.CONNECTION: enp0s3GENERAL.CON-PATH: /org/freedesktop/NetworkManager/ActiveConnection/1WIRED-PROPERTIES.CARRIER: onIP4.ADDRESS[1]: 10.0.0.2/24IP4.ADDRESS[2]: 10.0.2.15/24IP4.GATEWAY: 10.0.2.2IP4.DNS[1]: 192.168.0.1IP4.DNS[2]: 10.0.0.1IP6.ADDRESS[1]: fe80::dd96:20a6:cf92:1b27/64IP6.GATEWAY: -- # 查看链接[root@centos7 ~]# ip addr show 1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever2: enp0s3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000 link/ether 08:00:27:ff:27:a3 brd ff:ff:ff:ff:ff:ff inet 10.0.2.15/24 brd 10.0.2.255 scope global dynamic enp0s3 valid_lft 86316sec preferred_lft 86316sec inet 10.0.0.2/24 brd 10.0.0.255 scope global enp0s3 valid_lft forever preferred_lft forever inet6 fe80::dd96:20a6:cf92:1b27/64 scope link valid_lft forever preferred_lft forever [2] IPv6没有必要的话设置无效。1234567891011121314151617# 用cat命令查看默认设置[root@centos7 ~]# cat /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"GRUB_DEFAULT=savedGRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT="console"GRUB_CMDLINE_LINUX="crashkernel=auto rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb quiet"GRUB_DISABLE_RECOVERY="true" # 在第六行后设置[root@centos7 ~]# vi /etc/default/grubGRUB_CMDLINE_LINUX="ipv6.disable=1 rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb quiet" # 设置生效[root@centos7 ~]# grub2-mkconfig -o /boot/grub2/grub.cfg [root@centos7 ~]# reboot [3] 以上例子中接口名为「enp0s3」，普通非虚拟的物理服务器的接口名多为 「ethX」。 按照下面的操作方法可将接口名更改为「ethX」。123456789101112# 在第六行后设置[root@centos7 ~]# vi /etc/default/grubGRUB_CMDLINE_LINUX="net.ifnames=0 rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb quiet" # 设置生效[root@centos7 ~]# grub2-mkconfig -o /boot/grub2/grub.cfg [root@centos7 ~]# reboot # 查看设置结果[root@centos7 ~]# nmcli dDEVICE TYPE STATE CONNECTION eth0 ethernet connected Wired connection 1 各服务设置[1] 查看启动中的各项服务[2] もし自身の環境で不要なサービスがあれば、以下のようにして停止と自動起動のオフ設定をします。以下の例では Postfix を停止に設定しています。なお、サービス名末尾の [.service] は省略可能です。[3] 上記 Systemd サービス以外にも旧式の SysV サービスがいくつか残っており、こちらの自動起動設定は chkconfig で制御することになります。 最小構成でインストールした場合の SysV サービスは以下の 5 つのみです。系统更新[1] 安装完系统之后，尽量将系统更新到最新版本。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101[root@cnetos7 ~]# yum -y update Loaded plugins: fastestmirrorDetermining fastest mirrors * base: ftp.jaist.ac.jp * extras: ftp.jaist.ac.jp * updates: ftp.jaist.ac.jpResolving Dependencies--&gt; Running transaction check---&gt; Package NetworkManager.x86_64 1:1.8.0-9.el7 will be updated......# 中途省略......---&gt; Package yum.noarch 0:3.4.3-154.el7.centos.1 will be an update--&gt; Finished Dependency Resolution Dependencies Resolved ================================================================================ Package Arch Version Repository Size================================================================================Installing: grub2 x86_64 1:2.02-0.65.el7.centos.2 updates 29 k replacing grub2.x86_64 1:2.02-0.64.el7.centos grub2-tools x86_64 1:2.02-0.65.el7.centos.2 updates 1.8 M replacing grub2-tools.x86_64 1:2.02-0.64.el7.centos grub2-tools-extra x86_64 1:2.02-0.65.el7.centos.2 updates 993 k replacing grub2-tools.x86_64 1:2.02-0.64.el7.centos grub2-tools-minimal x86_64 1:2.02-0.65.el7.centos.2 updates 170 k replacing grub2-tools.x86_64 1:2.02-0.64.el7.centos kernel x86_64 3.10.0-693.21.1.el7 updates 43 MUpdating: NetworkManager x86_64 1:1.8.0-11.el7_4 updates 1.6 M NetworkManager-libnm x86_64 1:1.8.0-11.el7_4 updates 1.2 M......# 中途省略...... util-linux x86_64 2.23.2-43.el7_4.2 updates 2.0 M wpa_supplicant x86_64 1:2.6-5.el7_4.1 updates 1.2 M yum noarch 3.4.3-154.el7.centos.1 updates 1.2 M Transaction Summary================================================================================Install 5 PackagesUpgrade 87 Packages Total download size: 163 MDownloading packages:Delta RPMs disabled because /usr/bin/applydeltarpm not installed.Public key for NetworkManager-team-1.8.0-11.el7_4.x86_64.rpm is not installed--------------------------------------------------------------------------------Total 5.3 MB/s | 163 MB 00:30 Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7Running transaction checkRunning transaction testTransaction test succeededRunning transaction Updating : libgcc-4.8.5-16.el7_4.2.x86_64 1/183 Updating : 1:grub2-common-2.02-0.65.el7.centos.2.noarch 2/183 ......# 中途省略...... Cleanup : tzdata-2017b-1.el7.noarch 182/183 Cleanup : libgcc-4.8.5-16.el7.x86_64 183/183 Verifying : kmod-20-15.el7_4.7.x86_64 1/183 Verifying : iwl5150-firmware-8.24.2.2-58.el7_4.noarch 2/183 ......# 中途省略...... Verifying : yum-3.4.3-154.el7.centos.noarch 182/183 Verifying : cpio-2.11-24.el7.x86_64 183/183 Installed: grub2.x86_64 1:2.02-0.65.el7.centos.2 grub2-tools.x86_64 1:2.02-0.65.el7.centos.2 grub2-tools-extra.x86_64 1:2.02-0.65.el7.centos.2 grub2-tools-minimal.x86_64 1:2.02-0.65.el7.centos.2 kernel.x86_64 0:3.10.0-693.21.1.el7 Updated: NetworkManager.x86_64 1:1.8.0-11.el7_4 ......# 中途省略...... wpa_supplicant.x86_64 1:2.6-5.el7_4.1 yum.noarch 0:3.4.3-154.el7.centos.1 Replaced: grub2.x86_64 1:2.02-0.64.el7.centos grub2-tools.x86_64 1:2.02-0.64.el7.centos Complete! 镜像管理Vim设置sudo设置Cron设置]]></content>
      <categories>
        <category>System</category>
        <category>Linux</category>
        <category>CentOS 7</category>
      </categories>
      <tags>
        <tag>System</tag>
        <tag>Linux</tag>
        <tag>CentOS 7</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C语言数据结构 C Algorithm Ch. Two]]></title>
    <url>%2F2018%2F09%2F27%2FC%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-C-Algorithm-Ch-Two%2F</url>
    <content type="text"><![CDATA[警告本章主要讲scanf()函数。 C语言的条件判断if 与 if-else-if利用scanf()函数读取输入信息用if-else-if写程序switchC语言的循环自增与自减while用break和return从循环中跳出用continue从循环中跳出while循环程序forfor循环程序再来一个while循环整数与浮动小数C语言的型变换指针基础什么事指针指针的意义针对硬件的程序第二章总结学完这一章之后，应该对C语言有了些许的了解，可以自己写一些简单的程序。通过后面的学习，试着自己写一下代码对能力将会有很大的提升。]]></content>
      <categories>
        <category>Algorithm</category>
        <category>C</category>
      </categories>
      <tags>
        <tag>C</tag>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C语言数据结构 C Algorithm Ch.One]]></title>
    <url>%2F2018%2F09%2F27%2FC%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-C-Algorithm-Ch-One%2F</url>
    <content type="text"><![CDATA[C语言的基础整理什么是C语言欢迎大家来到历史知识小课堂。C语言诞生于1973年的贝尔实验室，由Dennis M. Ritchie所开发。1983年ANSI（American National Standards Institute）开始制定C语言的标准化，1988年ANSI C标准规格制定完成并延续至今。 C语言学习的意义现今，大多数程序语言都或多或少的参考了C语言的设计，可以说C语言是其他程序语言的基础。 C语言是一款依赖程序员的语言C语言优先处理程序员的代码，所以C语言的程序员需要贴别留意以下几点： XXXXX XXXXX XX XX XX XX XX XX XX XX 以上10点在写C语言程序中常常遇到，望各位注意。 准备C语言编程开始之前，C语言的编译器是非常必要的。根据各自的系统环境准备编译器。 准备一个“.C”结尾的文件任何编辑器都可以，包括Windows自带的记事本。保存文件时将文件的扩展名设为C。例如：Hello.c 代码1234567891011#include &lt;stdio.h&gt;int main()&#123; char charray[] = "最初的"; printf("%s", charray); printf("C语言程序"); return 0;&#125; 编译及执行结果123% gcc -Wall -o 1.1_first ./1.1_first.c% ./1.1_first最初的C语言程序% C语言代码雏形代码记述代码变更变量理解全局变量和局部变量变量定义算数演算代入演算C语言基础语法条件文和真伪判断根据条件文判断判断程序条件结合打印函数第一章总结好烦哦，看来基础理论是学习最大的障碍阻力。如果没有基础，学习一定会变得非常有趣。不过没有基础，后面该怎么学是一个值得思考的问题……]]></content>
      <categories>
        <category>Algorithm</category>
        <category>C</category>
      </categories>
      <tags>
        <tag>C</tag>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[京セラ複合機TASKalfa 6052ci(J) Macにスキャナー]]></title>
    <url>%2F2018%2F09%2F26%2F%E4%BA%AC%E3%82%BB%E3%83%A9%E8%A4%87%E5%90%88%E6%A9%9FTASKalfa-6052ci-J-Mac%E3%81%AB%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%8A%E3%83%BC%2F</url>
    <content type="text"><![CDATA[オフィスに新たな複合機京セラTASKalfa 6052ci(J)を導入しました。性能がかなり良くて印刷速度は55ページ／分（カラー）、60ページ／分（白黒）。 が、京セラの公式ページで検索していたところ、Macにサポートしていませんって 参ったな。。。スキャンができないといけない理由は三つあります。 上司に怒られる（心理的痛い） 上司に叱られる（精神的痛い） 上司に殴られる（身体的痛い） よし、自力で解決します。 環境システム：OS X EI Capitan 10.11.6、Server 5.2で管理しています。 1. Server内ユーザとグループを作成スキャン用ユーザなので、サーバで個人フォルダを作成する必要ないです。【无-仅限服务】を選択します。実はグループを作成する必要がないです。。。管理しやすいよう作りました。上で作成したユーザ京セラをグループに加入します。 2. 共有フォルダ作成と設定フォルダ共有サービスをオン、フォルダを追加します。先ほど作成したグループ（或いはユーザ）を追加します。SMBのチェックも忘れずに。共有フォルダSharedはUsersのしたじゃないとアクセス障害があります。 3. 複合機TASKalfa 6052ci(J)設定複合機にログインして本体アドレス帳にクリック、追加します。設定は画像の通りです。ファイルを管理しやすい様、97_Kyosera-Scanを作成しました。因みに下記の設定は複合機本体でもOKです。 4. 結果スキャンしたファイルはちゃんと送信しましたね。良かったです。 日本語が間違ったら、教えて欲しいです。szhaoliang#hotmail.com（#を@にチェンジ）]]></content>
      <tags>
        <tag>Scan</tag>
        <tag>複合機</tag>
        <tag>Setting</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac OS postfix邮件发送]]></title>
    <url>%2F2018%2F09%2F25%2FMac-OS-postfix%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81%2F</url>
    <content type="text"><![CDATA[环境 操作系统：macOS High Sierra 10.13.6 Postfix mail_version = 3.2.2 Postfix版本确认方法，在终端下输入命令postconf mail_version]]></content>
      <tags>
        <tag>postfix</tag>
        <tag>command</tag>
        <tag>命令行</tag>
        <tag>Mac OS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Shell命令行_ip取得(进阶)]]></title>
    <url>%2F2018%2F09%2F24%2FShell%E5%91%BD%E4%BB%A4%E8%A1%8C-ip%E5%8F%96%E5%BE%97-%E8%BF%9B%E9%98%B6%2F</url>
    <content type="text"><![CDATA[1. 前因后果之前简单写了取得IP地址的Shell。这里重新写一个（多加了几行），更“智能”一些的。本来想加上个自动发邮件的功能，这样就不用Dropbox了。不过感觉Postfix设置略微复杂，过几天有时间了再弄。 2. Shell脚本内容123456789101112131415161718192021# 変数tmp tmp=0# 永遠に実行、中断したい場合は「Ctrl + c」while true;do # inet-ip.info からグローバルIPアドレスを取得、値をglobal_ipに代入 global_ip=$(curl inet-ip.info) # 取得したグローバルIPはtmpの値と一致か判断 if [ $global_ip = $tmp ]; then # 一致の場合は echo "Same Golbal IP" else # 違う場合日時とIPアドレスをip.txtに書き込み date &gt;&gt; ../Dropbox/000-ip/ip.txt echo $global_ip &gt;&gt; ../Dropbox/000-ip/ip.txt # 新しいIPアドレスをtmpに代入 tmp=$global_ip fi # 600秒後再度実行する sleep 600done 3. 问题点同一IP地址长时间不停的访问，导致被禁用了。可以吧间隔时间调的更长一些，例如：7200秒（2小时）。 % ./getip_V1.sh % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- 0:01:15 --:--:-- 0curl: (7) Failed to connect to inet-ip.info port 80: Operation timed out ./getip_V1.sh: line 9: [: =: unary operator expected 备用的资源 curl ifconfig.co curl ifconfig.me curl httpbin.org/ip 4. 参考文献先人1，shell变量带入]]></content>
      <tags>
        <tag>command</tag>
        <tag>命令行</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Shell命令行_ip取得]]></title>
    <url>%2F2018%2F09%2F22%2FShell%E5%91%BD%E4%BB%A4%E8%A1%8C-ip%E5%8F%96%E5%BE%97%2F</url>
    <content type="text"><![CDATA[前因后果买了个TP-Link的路由器，支持VPN，可是没有固定IP地址。本以为路由器不关IP地址就不会变。没想到啊，没想到，IP地址变的还真欢啊。这可怎么办才好呢（怎么确定外网IP地址呢）？搜了一下说什么花生壳之类的动态域名，貌似要收费，那我还不如买个固定IP省事得多。是的，日本这边可以申请固定IP，大概每月7～8千日元。最近Python好像很火，又是爬虫，又是人工智能大数据的，各种词各种报道。那就Python写个小程序吧。结果搜了一下，排名靠前的网页都是教人写查看内网IP地址的。搜了搜日本这边的网站，发现命令行更方便，看外网IP的话一行就搞定了，curl inet-ip.info。还有很多这样的网站可以查看自己的IP地址。 Shell脚本内容# 永遠に実行、中断したい場合は「Ctrl + c」 while true;do # inet-ip.info からグローバルIPアドレスを取得、ip.txtに書き込み # 600秒間隔で更新 curl inet-ip.info &gt; ip.txt; sleep 600; echo &quot;&quot; # テスト用コマンド、1秒間隔で日時を出力 # date; sleep 1; echo &quot;&quot; done 执行sh getip.sh 因为懒多打一个字都不爽，更改文件权限。 chmod +x getip.sh 这样就可以./getip.sh来执行。 最后这个脚本还不是很完善，我把输出的ip.txt文件放到了Dropbox的文件夹内，这样我在任何地方只要查看Dropbox内的文件就知道最新的IP地址了。然后VPN连接上。好像国内用不了Dropbox，看来还要另想办法…… 参考文件先人1，Python先人2，Shell循环先人3，Shell权限先人4，Shell权限]]></content>
      <tags>
        <tag>command</tag>
        <tag>命令行</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo插入图片，插入]]></title>
    <url>%2F2018%2F09%2F14%2FHexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%EF%BC%8C%E6%8F%92%E5%85%A5%2F</url>
    <content type="text"><![CDATA[先吐槽，再说明。吐槽部分:用了这么多博客系统，还没有一个因为在文章中插入图片搞的这么复杂。 说明部分：以下内容都是在网上搜索来到，感谢先人作出的贡献。本人没有时间去研究这些东西（主要是两点原因：1.懒； 2.不会） 把Hexo博客（主页）内的配置文件 _config.yml 里的 post_asset_folder: 选项设置为 true 在Hexo目录下执行npm install hexo-asset-image –save 安装一个图片插件 在新建文章hexo new 文章名的时候，会随文章一起生成一个同名文件夹 把文章内需要的图片放到文件夹中，在文章中引入图片![](文件夹名/图片名.jpg) hexo clean 清除现有数据库及public文件夹，hexo g生成页面，文章内终于“插入”图片了。 说明部分如果太简单，不理解的话可以参考先人的内容。先人1先人2先人3的插件先人4]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[md编辑格式]]></title>
    <url>%2F2018%2F09%2F13%2Fmd%E7%BC%96%E8%BE%91%E6%A0%BC%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[Hello ==== I like Apple H1H2H3H4H5H6#H7 (残念！没有H7，最大到H6) 引用内容 引用饮用内容也可以 一点引用 列表 列表 列表 数字列表 数字列表 第一层 1-1. 第二层 表格 1 2 3 只有一个格子 2 最少需要三个- 最少需要三个= 插入图片]]></content>
      <tags>
        <tag>setting</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo的各种设定配置]]></title>
    <url>%2F2018%2F09%2F13%2FHexo%E7%9A%84%E5%90%84%E7%A7%8D%E8%AE%BE%E5%AE%9A%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[一、相关设置 在github上创建一个项目 代码库设置 二、安装Hexo 全局安装命令 npm install hexo-cli -g 初始化Hexo，在一个文件夹内 hexo init 开始体验Hexo hexo g 开启本地服务 hexo server 三、上传至github 配置SSH key 设置Git的user name和E-mail 配置deployment 1. 配置SSH key 移动到个人根目录下$ cd ~/.ssh 生成Key，ssh-keygen -t rsa -C “xxxxx@yahoo.com“ 打开目录找到刚刚生成的.ssh/id_ras.pub文件，复制文件内容，打开github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key，将刚刚复制的内容粘贴，title一定要起个吊炸天的，别人看了都怕的，保存。 测试一下$ ssh -T git@github.com # 邮箱不用改 2. 设置Git的user name和E-mail$ git config --global user.name &quot;你的github用户名&quot; $ git confit --global user.email &quot;你的github注册邮箱&quot; 3. 配置deployment配置_config.yml中的deploy部分 deploy: type: git repository: git@github.com:用户名/用户名.github.io.git branch: master 安装一个插件npm install hexo-deployer-git –save然后hexo d来部署你的网站。 4. 其他 % hexo Usage: hexo &lt;command&gt; Commands: clean Remove generated files and cache. config Get or set configurations. deploy Deploy your website. generate Generate static files. help Get help on a command. init Create a new Hexo folder. list List the information of the site migrate Migrate your site from other system to Hexo. new Create a new post. publish Moves a draft post from _drafts to _posts folder. render Render files with renderer plugins. server Start the server. version Display version information. Global Options: --config Specify config file instead of using _config.yml --cwd Specify the CWD --debug Display all verbose messages in the terminal --draft Display draft posts --safe Disable all plugins and scripts --silent Hide output on console For more help, you can use &apos;hexo help [command]&apos; for the detailed information or you can check the docs: http://hexo.io/docs/ hexo new “title”新建一个文章，进行编辑 hexo clean清楚数据库及public文件夹 hexo g生成静态文件（创造网站） hexo s开启服务，访问http://localhost:400 hexo d部署网站 参考文献 先人1]]></content>
      <tags>
        <tag>setting</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F09%2F13%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
